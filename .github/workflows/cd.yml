name: CD
on:
  workflow_dispatch: {}
  schedule:
    - cron: '0 7 * * 1' # At 07:00 on Monday.
  push:
    branches:
    - main
    tags:        
    - v*

permissions:
  contents: write
  security-events: write

jobs:
  version:
    outputs:
      next: ${{steps.release.outputs.next}}
      current: ${{steps.release.outputs.current}}
    runs-on: ubuntu-latest
    if: github.event.push
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v4
      with:
        go-version: 1.20.6
    
    - name: Bump version
      id: release
      run: |
        if [ "${github.ref_type}" == "tag" ]
        then
          CURRENT="------------------"
          NEXT="${{ github.ref_name }}"
          echo "current=$CURRENT" >> $GITHUB_OUTPUT
          echo "next=$NEXT" >> $GITHUB_OUTPUT
          echo "Manually pushed tag will build image v$CURRENT" >> $GITHUB_STEP_SUMMARY
          exit 0
        fi

        go install github.com/caarlos0/svu@latest
        CURRENT=$(svu c | tr -d "v")
        NEXT=$(svu n | tr -d "v")

        echo "current=$CURRENT" >> $GITHUB_OUTPUT
        echo "next=$NEXT" >> $GITHUB_OUTPUT
        echo "Current version: v$CURRENT" >> $GITHUB_STEP_SUMMARY
        echo "Next version: v$NEXT" >> $GITHUB_STEP_SUMMARY

  release:
    runs-on: ubuntu-latest
    needs: [version]
    if: github.event.push && needs.version.outputs.next != needs.version.outputs.current
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v4
      with:
        go-version: 1.20.6

    - name: Create GH release
      env:
        TAG: ${{needs.version.outputs.next}}
        GH_TOKEN: ${{ github.TOKEN }}
      run: |
        git tag v$TAG
        git push --tags

        gh release create v$TAG

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}
      
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ghcr.io/nu12/audio-gonverter:latest,ghcr.io/nu12/audio-gonverter:${{ needs.version.outputs.next }}

  analysis:
    runs-on: ubuntu-latest
    needs: [release]
    if: github.event.push || github.event.workflow_dispatch || github.event.schedule
    steps:
    - uses: actions/checkout@v3
    - name: Pull latest image
      run: |
        docker pull ghcr.io/nu12/audio-gonverter:latest
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ghcr.io/nu12/audio-gonverter:latest
        format: 'sarif'
        output: 'image.sarif'
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'

    - name: Upload trivy results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'image.sarif'
        category: image